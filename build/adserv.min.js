/*! AdServ  2.2.2 2014-10-23 13:40:42 */
"use strict";

!function(a, b) {
    a.AdServ = b(a, a.document);
}(window, function(window, document) {
    function safe_log(a) {
        return function(b) {
            try {
                AdServ.log_messages.push(a + ":" + JSON.stringify(b));
            } catch (c) {
                AdServ.log_messages.push(a + ":" + b);
            }
        };
    }
    function noop() {}
    function randhex(a) {
        return (4294967296 * (1 + Math.random())).toString(16).substr(1, a);
    }
    function count() {
        return guid.count.toString(16).substr(1, 4);
    }
    function guid() {
        guid.count++, guid.date || (guid.date = ((Date.now() - 11281176e5) / 1e3 | 0).toString(16), 
        guid.count = 65537, setTimeout(function() {
            guid.date = !1;
        }, 1e3));
        var a = toArray(arguments);
        return a.push(guid.date), a.push(count()), a.push(randhex(8)), a.join("_");
    }
    function toArray(a) {
        return slice.call(a, 0);
    }
    function isFunction(a) {
        return a && "function" == typeof a;
    }
    function isObject(a) {
        return a && "object" == typeof a && "[object Object]" === toString.call(a);
    }
    function isArray(a) {
        return a && "object" == typeof a && "[object Array]" === toString.call(a);
    }
    function isString(a) {
        return a && "string" == typeof a;
    }
    function isUndefined(a) {
        return a && void 0 === a;
    }
    function isElement(a) {
        return a ? 1 === a.nodeType : !1;
    }
    function isNode(a) {
        return a ? 9 === a.nodeType : !1;
    }
    function throttle(a, b) {
        var c = !1;
        return function() {
            c || (c = !0, a(), setTimeout(function() {
                a(), c = !1;
            }, b));
        };
    }
    function len(a) {
        return a.length;
    }
    function mix(a, b) {
        var c, d = {};
        for (c in a) a.hasOwnProperty(c) && (d[c] = a[c]);
        for (c in b) b.hasOwnProperty(c) && (d[c] = b[c]);
        return d;
    }
    function getRequestParameter(a) {
        var b = location.search + "&" + location.hash;
        if (len(b) > 1) {
            var c = b.indexOf(a + "=");
            if (c > -1) {
                var d = b.indexOf("&", c) > -1 ? b.indexOf("&", c) : len(b);
                return b.substring(b.indexOf("=", c) + 1, d);
            }
        }
    }
    function isSupportedBrowser() {
        return ("addEventListener" in window || "attachEvent" in window) && "querySelector" in document && "querySelectorAll" in document && "JSON" in window && "stringify" in JSON && "parse" in JSON && "postMessage" in window;
    }
    function get(a, b) {
        function c() {
            clearTimeout(d);
        }
        b = b || noop;
        var d, e;
        if (window.XDomainRequest) e = new XDomainRequest(), e.onprogress = function() {}; else if (window.XMLHttpRequest) e = new XMLHttpRequest(); else try {
            e = new activeX("Msxml2.XMLHTTP");
        } catch (f) {
            return null;
        }
        return d = setTimeout(function() {
            e.abort(), b("aborted by a timeout", null, e);
        }, 5e3), e.onreadystatechange = function() {
            4 == e.readyState && (e.onload = noop, c(), b(200 != e.status ? "err : " + e.status : null, e.responseText, e));
        }, e.onload = function() {
            c(), e.status ? b(200 != e.status ? "err : " + e.status : null, e.responseText, e) : b(e.responseText ? null : "err : no response", e.responseText, e);
        }, e.open("GET", a, !0), e.send(), e;
    }
    function getJSON(a, b) {
        return get(a, function(a, c, d) {
            var e = c;
            if (!a) try {
                e = parseJSON(c);
            } catch (f) {
                return b("malformed json : " + f.message);
            }
            b(a, e, d);
        });
    }
    function loadScript(a, b) {
        b = b || noop;
        var c = document.createElement("script"), d = document.head || document.body;
        c.src = (a.indexOf("?") > 0 ? a + "&" : a + "?") + "rnd=" + Math.random(), c.onload = c.onreadystatechange = function() {
            c[readyState] && "loaded" != c[readyState] && "complete" != c[readyState] || (b(), 
            d.removeChild(c), c.onload = c.onreadystatechange = noop);
        }, d.appendChild(c);
    }
    function getPlayerVersion() {
        if (activeX) try {
            var a = new activeX("ShockwaveFlash.ShockwaveFlash");
            if (a) {
                var b = a.GetVariable("$version").substring(4);
                return parseFloat(b.replace(",", "."));
            }
        } catch (c) {} else {
            var d = window.navigator.plugins["Shockwave Flash"];
            if (d && d.description) return parseFloat(d.description.match(/(\d+)\.(\d+)/)[0]);
        }
        return "0";
    }
    function passbackHandlerMaker(a, b) {
        guid("handler", b.adspace);
        return function() {
            return function(c) {
                var d, e;
                try {
                    d = parseJSON(c.data);
                } catch (f) {
                    e = f;
                }
                e || d.adspace != b.adspace || (console.warn("passback from adspace " + b.adspace + " to " + d.next), 
                console.warn("campaign rejected:", b), a.innerHTML = "", b.nesting = (0 | b.nesting) + 1, 
                b.nesting < 10 ? AdServ.load({
                    adspaces: [ {
                        id: d.next,
                        target: a,
                        adServingLoad: b.ctx.adServingLoad
                    } ]
                }) : console.error("too deep"));
            };
        };
    }
    function makeA(a, b) {
        var c = document.createElement("a");
        return c.id = guid("a", b.adspace, b.campaign), c.setAttribute("href", b.click), 
        c.setAttribute("target", "_blank"), c.appendChild(a), c;
    }
    function makeImg(a) {
        var b = document.createElement("img");
        return b.id = guid("img", a.adspace, a.campaign), b.border = 0, b.src = a.image, 
        b;
    }
    function createIframe(a) {
        var b = document.createElement("iframe");
        return b.id = guid("iframe", a.adspace, a.campaign), b.style.width = a.width + "px", 
        b.style.height = a.height + "px", b.style.border = 0, b.style.borderStyle = "none", 
        b.frameBorder = 0, b.scrolling = "no", b;
    }
    function wrapIframe(a, b) {
        var c = createIframe(b);
        return a.appendChild(c), c.contentDocument.write('<!doctype html><body style="margin:0px;padding:0px;width:100%;height:100%;"></body>'), 
        AdServ.bind(window, "message", passbackHandlerMaker(a, b)(c)), c;
    }
    function makeFloat(a) {
        console.log(a);
        var b = guid("float");
        console.info("got a floating banner!", b);
        var c = "position:fixed; width:" + a.width + "px; height:" + a.height + "px; z-index:2147483646;";
        if ("centre" == a.floating_position) c += "left:50%; top:50%;margin-left:-" + a.width / 2 + "px;margin-top:-" + (a.height + 16) / 2 + "px;"; else if ("top_centre" == a.floating_position) c += "left:50%; top:0;margin-left:-" + a.width / 2 + "px;"; else if ("top_left" == a.floating_position) c += "left:0; top:0;"; else if ("top_right" == a.floating_position) c += "right:0; top:0;"; else if ("bottom_left" == a.floating_position) c += "left:0; bottom:0;"; else if ("bottom_right" == a.floating_position) c += "right:0; bottom:0;"; else if ("bottom_centre" == a.floating_position) c += "left:50%; bottom:0;margin-left:-" + a.width / 2 + "px;margin-top:-" + a.height / 2 + "px;;position:fixed !important;"; else if (a.floating_position.indexOf(".") > 0) {
            var d = a.floating_position.split(".");
            c += "left:" + d[0] + "; top:" + d[1] + ";";
        }
        var e = document.createElement("div");
        e.id = "floating_" + b, e.close = function() {
            clearTimeout(e.timeout), e.style.display = "none", AdServ.emit("floating:close", a), 
            e.close = noop;
        }, e.timeout = setTimeout(e.close, 1e3 * a.floating_time);
        var f = document.createElement("div");
        if (f.id = "content_" + b, 0 != a.floating_close_position.indexOf("off")) {
            var g = document.createElement("div");
            bind(g, "click", e.close), g.id = "close_" + b;
            var h = "position:absolute; width:16px; height:16px;z-index:2147483646;border:0px; cursor:pointer;";
            c += "background:#fff;", "top_left" == a.floating_close_position ? h += "left:0; top:0;" : "top_right" == a.floating_close_position ? h += "right:0; top:0;" : "bottom_left" == a.floating_close_position ? h += "left:0; bottom:0;" : "bottom_right" == a.floating_close_position && (h += "right:0; bottom:0;"), 
            g.setAttribute("style", h);
            var i = document.createElement("img");
            i.src = AdServ.baseUrl + "/close.gif", g.appendChild(i), e.appendChild(g);
        }
        return e.appendChild(f), e.setAttribute("style", c), e.setAttribute("class", "adserving_float adserving_float_" + a.adspace), 
        a.elem.appendChild(e), AdServ.emit("floating:open", a), f;
    }
    function render(a) {
        var b, c;
        if (a.elem) {
            if (c = a.elem, a.floating && (c = makeFloat(a)), a.iframe && "iframe" !== a.banner_type && "wallpaper" !== a.banner_type) {
                if ("html" === a.banner_type) return b = createIframe(a), b.src = AdServ.baseUrl + "/show_campaign.php?nocount=1&adspaceid=" + a.adspace + "&campaignid=" + a.campaign + "&bannerid=" + a.banner, 
                AdServ.bind(window, "message", passbackHandlerMaker(c, a)(b)), void c.appendChild(b);
                b = wrapIframe(c, a), c = b.contentDocument.body;
            }
            var d = engines[a.banner_type];
            d ? d(c, a) : console.error("no renderer for banner type yet : " + a.banner_type, a);
        } else console.error("no element for banner yet : " + a.banner_type, a);
    }
    function getContext(a, b) {
        var c = a.context || "_GLOBAL_";
        a.context = b[c] = b[c] || {
            name: c,
            ids: [],
            adspaces: {},
            keyword: a.keyword || AdServ.keyword,
            searchword: a.searchword || AdServ.searchword,
            adServingLoad: ""
        }, a.adServingLoad && (a.context.adServingLoad += a.adServingLoad), AdServ.keyword || (AdServ.keyword = a.keyword);
    }
    function set(a, b, c) {
        AdServ[a] = isObject(c[0]) && c[0][a] || AdServ[a] || b;
    }
    var AdServ = window.AdServ || {};
    AdServ.version = "2.2.2", AdServ.released = "2014-10-23 13:40:42", window.AdServ = AdServ, 
    DEBUG = !0;
    var domContentLoaded = "DOMContentLoaded", addEventListener = "addEventListener", onreadystatechange = "onreadystatechange", readyState = "readyState";
    if (AdServ.log_messages = [], void 0 !== window.console) var console = window.console; else console = {};
    if (console.log = console.log || safe_log("log"), console.debug = console.debug || safe_log("debug"), 
    console.error = console.error || safe_log("error"), console.warn = console.warn || safe_log("warn"), 
    console.info = console.info || safe_log("info"), window.adServingLoad = window.adServingLoad || "", 
    Date.now || (Date.now = function() {
        return +new Date();
    }), DEBUG) {
        var ie = !1;
        !function(a) {
            var b;
            if ((b = /msie\s*(\d+)/.exec(a)) ? ie = {
                version: parseInt(b[1])
            } : (b = /trident\/\s*(\d+)/.exec(a)) && (ie = {
                version: parseInt(b[1]) + 4
            }), ie) {
                var c = 0;
                ie.supported = c >= 5.8 || ie.version > 10, ie.emulated = 7 == ie.version && 5.7 != c || 8 == ie.version && 5.8 != c || 9 == ie.version && 5.9 != c || 10 == ie.version && 10 != c;
            }
        }(navigator.userAgent.toLowerCase()), AdServ.ie = ie;
    }
    var toString = Object.prototype.toString, slice = Array.prototype.slice, urlencode = encodeURIComponent, activeX = window.ActiveXObject;
    AdServ.guid = guid, AdServ.isSupportedBrowser = isSupportedBrowser;
    var ready = AdServ.ready = function(a) {
        function b(a) {
            for (h = 1; a = d.shift(); ) a();
        }
        var c, d = [], e = !1, f = document.documentElement, g = f.doScroll, h = /^loade|c/.test(document[readyState]);
        return document[addEventListener] && document[addEventListener](domContentLoaded, c = function() {
            document.removeEventListener(domContentLoaded, c, e), b();
        }, e), g && document.attachEvent(onreadystatechange, c = function() {
            /^c/.test(document[readyState]) && (document.detachEvent(onreadystatechange, c), 
            b());
        }), a = g ? function(b) {
            self != top ? h ? b() : d.push(b) : function() {
                try {
                    f.doScroll("left");
                } catch (c) {
                    return setTimeout(function() {
                        a(b);
                    }, 50);
                }
                b();
            }();
        } : function(a) {
            h ? a() : d.push(a);
        };
    }(), $ID = AdServ.$ID = function(a) {
        return isElement(a) ? a : document.getElementById(a);
    }, $ = AdServ.$ = function(a, b) {
        return isElement(a) ? a : (b || (b = document), b.querySelector(a));
    }, $$ = AdServ.$$ = function(a, b) {
        return b || (b = document), slice.call(b.querySelectorAll(a));
    }, getComputedStyle;
    getComputedStyle = window.getComputedStyle ? window.getComputedStyle : function(a) {
        var b = {};
        return b.el = a, b.getPropertyValue = function(a) {
            var c = /(\-([a-z]){1})/g;
            return "float" == a && (a = "styleFloat"), c.test(a) && (a = a.replace(c, function() {
                return arguments[2].toUpperCase();
            })), b.el.currentStyle[a] ? b.el.currentStyle[a] : null;
        }, b;
    };
    var css = AdServ.css = function(a, b) {
        var c = $ID(a);
        return c ? getComputedStyle($(c)).getPropertyValue(b) : null;
    }, isVisible = AdServ.isVisible = function(a) {
        var b = $ID(a);
        return b ? "BODY" === b.nodeName ? !0 : "hidden" == css(b, "visibility") ? !1 : "none" == css(b, "display") ? !1 : "0" == css(b, "opacity") ? !1 : isVisible(b.parentNode) : !1;
    }, evil = function(a) {
        return Function("return (" + a + ")")();
    }, parseJSON = "object" == typeof JSON ? JSON.parse : function(a) {
        if (a += "", "" != a) {
            var b = a.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, "@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, "]").replace(/(?:^|:|,)(?:\s*\[)+/g, "");
            if (/^[\],:{}\s]*$/.test(b)) return evil(a);
        }
        throw "parseJSON failed";
    }, eventHandlers = {}, on = AdServ.on = function(a, b, c) {
        a && b && (eventHandlers[a] = void 0 === eventHandlers[a] ? [] : eventHandlers[a], 
        eventHandlers[a].push(function(a) {
            return b.apply(c || window, a);
        }));
    }, once = AdServ.once = function(a, b, c) {
        on(a, function() {
            b(), b = noop;
        }, c);
    }, emit = AdServ.emit = function(a) {
        if (void 0 !== eventHandlers[a]) for (var b = slice.call(arguments, 1), c = 0; c < len(eventHandlers[a]); c++) eventHandlers[a][c](b);
    }, bind = AdServ.bind = function(a, b, c) {
        a[addEventListener] ? a[addEventListener](b, c, !1) : a.attachEvent("on" + b, c);
    }, unbind = AdServ.unbind = function(a, b, c) {
        a[addEventListener] ? a.removeEventListener(b, c, !1) : a.detachEvent(b, c);
    }, originalResize = window.onresize || noop;
    window.onresize = function() {
        try {
            originalResize();
        } catch (a) {}
        emit("page:resize");
    }, ready(function() {
        emit("page:loaded");
    }), AdServ.get = get, AdServ.getJSON = getJSON, AdServ.loadScript = loadScript;
    var playerVersion;
    playerVersion = getPlayerVersion();
    var isFlashSupported = AdServ.flash = playerVersion >= 6 ? playerVersion : !1, Flash = function(a, b, c, d) {
        this.params = {
            quality: "best",
            allowscriptaccess: "always",
            wmode: "opaque"
        }, this.vars = {}, this.attrs = {
            swf: a,
            id: b,
            w: c,
            h: d
        };
    };
    Flash.prototype = {
        addParam: function(a, b) {
            this.params[a] = b;
        },
        addVariable: function(a, b) {
            this.vars[a] = b;
        },
        getVars: function() {
            var a, b = [];
            for (a in this.vars) b.push(a + "=" + this.vars[a]);
            return b;
        },
        getSWFHTML: function() {
            var a, b = this.params, c = this.attrs, d = this.getVars().join("&"), e = ' width="' + c.w + '" height="' + c.h + '" id="' + c.id + '" name="' + c.id + '" ';
            if (activeX) {
                a = '<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"' + e + '><param name="movie" value="' + c.swf + '" />';
                for (f in b) a += '<param name="' + f + '" value="' + b[f] + '" />';
                len(d) > 0 && (a += '<param name="flashvars" value="' + d + '" />'), a += "</object>";
            } else {
                a = '<embed type="application/x-shockwave-flash" src="' + c.swf + '"' + e;
                for (var f in b) a += f + '="' + b[f] + '" ';
                len(d) > 0 && (a += ' flashvars="' + d + '"'), a += ">";
            }
            return a;
        },
        write: function(a) {
            if (isFlashSupported) {
                var b = $ID(a);
                if (b) return b.innerHTML = this.getSWFHTML(), !0;
            }
            return !1;
        }
    }, window.baSWFObject = Flash;
    var engines = {};
    engines.image = function(a, b) {
        var c = makeImg(b), d = makeA(c, b);
        a.appendChild(d);
    }, engines.iframe = function(a, b) {
        var c = document.createElement("iframe");
        c.id = guid("iframe", b.adspace, b.campaign), c.style.width = b.width + "px", c.style.height = b.height + "px", 
        c.style.border = 0, c.style.borderStyle = "none", c.frameBorder = 0, c.scrolling = "no", 
        AdServ.bind(window, "message", passbackHandlerMaker(a, b)(c)), c.src = b.iframe_src, 
        a.appendChild(c);
    }, engines.flash = function(a, b) {
        var c = b.flash + "?" + b.click_tag_type + "=" + urlencode(b.click), d = new Flash(c, guid("flash", b.adspace, b.campaign), b.width, b.height);
        if (!d.write(a)) {
            var e = makeImg(b), f = makeA(e, b);
            a.appendChild(f);
        }
    }, engines.txt = function(a, b) {
        var c = document.createTextNode(b.txt), d = makeA(c, b);
        a.appendChild(d);
    }, engines.wallpaper = function(a, b) {
        function c(c) {
            c || (c = window.event);
            var d = window.event ? c.srcElement : c.target;
            d == a && window.open(b.click);
        }
        a.style.backgroundImage = "url(" + b.wallpaper + ")", a.style.backgroundRepeat = b.wallpaper_repeat || "no-repeat", 
        a.onclick = c;
        var d = document.body.getAttribute("class");
        document.body.setAttribute("class", (d || "") + " adserving_wallpaper_loaded"), 
        emit("wallpaper:loaded", b);
    }, engines.html = function renderHtml(elem, campaign) {
        function safeScriptContent(a) {
            return a.replace("document.write(", 'console.warn("WARNING : banner: ' + campaign.banner + ' uses document.write");document.write(');
        }
        var script, original;
        elem.innerHTML = campaign.html;
        var scripts = elem.getElementsByTagName("script"), iframes = elem.getElementsByTagName("iframe");
        1 == iframes.length && AdServ.bind(window, "message", passbackHandlerMaker(elem, campaign)(iframes[0]));
        for (var original, length = scripts.length, uid = guid("js", campaign.adspace, campaign.campaign), i = 0; length > i; i++) original = scripts[i], 
        console.log("original", original), original.src && (console.log("original.src"), 
        script = document.createElement("script"), script.id = uid + "_" + i, script.src = original.src, 
        elem.appendChild(script)), original.innerText ? (console.log("original.txt"), script = document.createElement("script"), 
        script.id = uid + "_" + i, script.innerText = safeScriptContent(original.innerText), 
        elem.appendChild(script)) : original.innerHTML && (console.log("original.html", original), 
        setTimeout(function(src) {
            return function() {
                console.log("eval", src), eval(safeScriptContent(src));
            };
        }(original.innerHTML), 1e3));
    }, AdServ.render = render;
    var prepareContexts = function(a) {
        set("baseUrl", "", a), set("keyword", "", a), set("searchword", "", a);
        for (var b = {
            baseUrl: AdServ.baseUrl,
            xhrTimeout: 5e3,
            guid: guid("ad")
        }, c = 0; c < len(a); c++) {
            var d = a[c];
            isFunction(d) ? b.ondone = d : isObject(d) ? b = mix(b, d) : isArray(d) && (b.adspaces = d);
        }
        if (!isArray(b.adspaces)) {
            var e = window.ba_adspaces;
            !e || 0 === len(e) || e.added ? b.adspaces = [] : (e.added = !0, b.adspaces = e);
        }
        if (!b.wallpaper) {
            var e = window.ba_wallpaper;
            !e || 0 === len(e) || e.added || (e.added = !0, b.wallpaper = e);
        }
        if (!b.floating) {
            var e = window.ba_floating;
            !e || 0 === len(e) || e.added || (e.added = !0, b.floating = e);
        }
        var f = b.contexts = {}, g = b.adspaces;
        for (c = 0; c < len(g); c++) {
            var h = g[c];
            h.id > 0 && (getContext(h, f), h.context.ids.push(h.id), h.context.adspaces[h.id] = h);
        }
        if (b.floating) {
            var h = b.floating;
            h.id > 0 && (getContext(h, f), h.context.floating = h, h.context.adspaces[h.id] = h);
        }
        if (b.wallpaper) {
            var h = b.wallpaper;
            h.id > 0 && (getContext(h, f), h.context.wallpaper = h, h.context.adspaces[h.id] = h);
        }
        return 0 != b.adspaces.length || b.wallpaper || b.floating || console.error("no adspaces or wallpaper provided"), 
        b;
    }, showCampaign = function(a) {
        render(a);
    }, checkVisibility = throttle(function() {
        for (var a = [], b = 0; b < len(invisibleAdspaces); b++) {
            var c = invisibleAdspaces[b];
            isVisible(c.elem) ? (recheck && clearInterval(recheck), showCampaign(c)) : a.push(c);
        }
        invisibleAdspaces = a;
    }, 200);
    AdServ.on("page:resize", function() {
        recheck && clearInterval(recheck), checkVisibility();
    });
    var recheck = 0, invisibleAdspaces = [];
    return AdServ.loadAdspaces = AdServ.load = function() {
        var a = prepareContexts(arguments), b = 0;
        for (var c in a.contexts) b++;
        for (var d in a.contexts) {
            var e = a.contexts[d], f = a.baseUrl + "/api/v2/get/campaigns.json?" + (e.wallpaper ? "&wallpaper=" + e.wallpaper.id : "") + (e.floating ? "&floating=" + e.floating.id : "") + "&adspaces=" + e.ids.join(",") + "&adServingLoad=" + urlencode(e.adServingLoad) + "&keyword=" + urlencode(e.keyword) + "&sw=" + urlencode(e.searchword) + "&uid=" + a.guid + "&count";
            getJSON(f, function(c) {
                return c.conf = a, function(a, d) {
                    if (a) console.error(a); else {
                        var e = d.campaigns;
                        c.adServingLoad = d.meta.adServingLoad;
                        for (var f = 0; f < len(e); f++) {
                            var g = e[f];
                            g.ctx = c, g.target = c.adspaces[g.adspace].target || c.adspaces[g.adspace].wallpaperTarget || document.body, 
                            g.type = (g.wallpaper ? "wallpaper:" : "") + (g.floating ? "floating:" : "") + g.banner_type, 
                            g.elem = $ID(g.target), g.elem ? ($ID(c.adspaces[g.adspace].target) && (g.elem.innerHTML = g.campaign && g.banner && g.adspace ? "<!-- Adspace: " + g.adspace + " Group:  " + g.group + " Campaign:  " + g.campaign + " Banner:  " + g.banner + " here -->" : "<!-- Adspace " + g.adspace + " (empty) here -->"), 
                            console.info("Adspace: " + g.adspace, g.elem), emit("adspace:loaded", g), g.campaign && g.banner && g.adspace ? (console.log("group:" + g.group), 
                            invisibleAdspaces.push(g)) : console.warn("Adspace was empty: " + g.adspace, g)) : console.error("target for adspace not found : " + g.target, g);
                        }
                    }
                    --b, b || ready(function() {
                        checkVisibility();
                    });
                };
            }(e));
        }
        return a;
    }, console.debug("AdServ.released : " + AdServ.released), AdServ;
});