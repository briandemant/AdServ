/*! AdServ  0.0.8 2013-06-04 15:21:46 */
"use strict";

(function(a, b) {
    a.AdServ = b(a, a.document);
})(window, function(a, b) {
    var c = a.AdServ || {};
    c.version = "0.0.8";
    c.released = "2013-06-04 15:21:45";
    a.AdServ = c;
    var d = Object.prototype.toString;
    var e = function(a) {
        return a && typeof a === "function";
    };
    var f = function(a) {
        return a && typeof a === "object" && d.call(a) === "[object Object]";
    };
    var g = function(a) {
        return a && typeof a === "object" && d.call(a) === "[object Array]";
    };
    var h = function(a) {
        return a && typeof a === "string";
    };
    var i = function(a) {
        return a && typeof a === "undefined";
    };
    var j = function(a) {
        return a ? a.nodeType === 1 : false;
    };
    var k = function(a) {
        return a ? a.nodeType === 9 : false;
    };
    var l = function() {};
    var m = Array.prototype.slice;
    var n = c.guid = function() {
        var a = function() {
            return ((1 + Math.random()) * 65536 | 0).toString(16).substring(1);
        };
        return "ad_" + a() + "_" + a() + "_" + a() + "_" + a();
    };
    var o = encodeURIComponent;
    var p = function(a, b) {
        var c = {};
        var d;
        for (d in a) {
            if (a.hasOwnProperty(d)) {
                c[d] = a[d];
            }
        }
        for (d in b) {
            if (b.hasOwnProperty(d)) {
                c[d] = b[d];
            }
        }
        return c;
    };
    var q = a.console;
    if (!q) {
        c.history = [];
        q = {};
        q.log = function() {
            var a = m.call(arguments);
            if (a.length == 1) {
                a = a[0];
            }
            c.history.push(a);
        };
        q.error = function() {
            q.log.apply(null, arguments);
        };
    }
    a.adServingLoad = a.adServingLoad || "";
    var r = c.get = function(a, b) {
        var c, d;
        try {
            d = new XMLHttpRequest();
        } catch (e) {
            try {
                d = new ActiveXObject("Msxml2.XMLHTTP");
            } catch (e) {
                return null;
            }
        }
        var f = function() {
            d.abort();
            b("aborted by a timeout", null, d);
        };
        c = setTimeout(f, 5e3);
        d.onreadystatechange = function() {
            if (d.readyState != 4) {
                return;
            }
            clearTimeout(c);
            b(d.status != 200 ? "err : " + d.status : null, d.responseText, d);
        };
        d.open("GET", a, true);
        d.send();
        return d;
    };
    var s = c.getJSON = function(a, b) {
        return r(a, function(a, c, d) {
            var e = c;
            if (!a) {
                e = H(c);
            }
            b(a, e, d);
        });
    };
    var t = c.$ = function(a, c) {
        if (j(a)) {
            return a;
        }
        if (!c) {
            c = b;
        }
        return c.querySelector(a);
    };
    var u = c.$$ = function(a, c) {
        if (!c) {
            c = b;
        }
        return m.call(c.querySelectorAll(a));
    };
    var v;
    if (!a.getComputedStyle) {
        v = function(a, b) {
            this.el = t(a);
            this.getPropertyValue = function(b) {
                var c = /(\-([a-z]){1})/g;
                if (b == "float") {
                    b = "styleFloat";
                }
                if (c.test(b)) {
                    b = b.replace(c, function() {
                        return arguments[2].toUpperCase();
                    });
                }
                return a.currentStyle[b] ? a.currentStyle[b] : null;
            };
            return this;
        };
    } else {
        v = a.getComputedStyle;
    }
    var w = c.css = function(a, b) {
        a = t(a);
        return v(t(a)).getPropertyValue(b);
    };
    var x = c.isVisible = function(a) {
        a = t(a);
        if (!a) {
            return false;
        }
        if (a.nodeName === "BODY") {
            return true;
        }
        if (w(a, "visibility") == "hidden") {
            return false;
        }
        if (w(a, "display") == "none") {
            return false;
        }
        if (w(a, "opacity") == "0") {
            return false;
        }
        return x(a.parentNode);
    };
    var y = {};
    var z = c.on = function(b, c, d) {
        y[b] = typeof y[b] === "undefined" ? [] : y[b];
        y[b].push(function(b) {
            return c.apply(d || a, b);
        });
    };
    var A = c.once = function(a, b, c) {
        z(a, function() {
            b();
            b = l;
        }, c);
    };
    var B = c.emit = function(a) {
        if (typeof y[a] !== "undefined") {
            var b = m.call(arguments, 1);
            for (var c = 0; c < y[a].length; c++) {
                y[a][c](b);
            }
        }
    };
    var C = a["onresize"] || l;
    a.onresize = function() {
        try {
            C();
        } catch (a) {}
        B("resize");
    };
    var D = false;
    var E = a.onload || l;
    a.onload = function() {
        D = true;
        try {
            E();
        } catch (a) {}
        B("load");
    };
    var F = function(a) {
        if (D) {
            a();
        } else {
            A("load", a);
        }
    };
    c.ready = F;
    var G = {
        util: {},
        SWFObjectUtil: {},
        baSWFObject: function(b, c, d, e, f, g, h, i, j, k, l) {
            this.DETECT_KEY = l ? l : "detectflash";
            this.skipDetect = G.util.getRequestParameter(this.DETECT_KEY);
            this.params = {};
            this.variables = {};
            this.attributes = [];
            if (b) {
                this.setAttribute("swf", b);
            }
            if (c) {
                this.setAttribute("id", c);
            }
            if (d) {
                this.setAttribute("width", d);
            }
            if (e) {
                this.setAttribute("height", e);
            }
            if (f) {
                this.setAttribute("version", new G.PlayerVersion(f.toString().split(".")));
            }
            this.installedVer = G.SWFObjectUtil.getPlayerVersion(this.getAttribute("version"), h);
            if (g) {
                this.addParam("bgcolor", g);
            }
            var m = i ? i : "high";
            this.addParam("quality", m);
            this.setAttribute("useExpressInstall", h);
            this.setAttribute("doExpressInstall", false);
            var n = j ? j : a.location;
            this.setAttribute("xiRedirectUrl", n);
            this.setAttribute("redirectUrl", "");
            if (k) {
                this.setAttribute("redirectUrl", k);
            }
        }
    };
    G.baSWFObject.prototype = {
        setAttribute: function(a, b) {
            this.attributes[a] = b;
        },
        getAttribute: function(a) {
            return this.attributes[a];
        },
        addParam: function(a, b) {
            this.params[a] = b;
        },
        getParams: function() {
            return this.params;
        },
        addVariable: function(a, b) {
            this.variables[a] = b;
        },
        getVariable: function(a) {
            return this.variables[a];
        },
        getVariables: function() {
            return this.variables;
        },
        getVariablePairs: function() {
            var a = [];
            var b;
            var c = this.getVariables();
            for (b in c) {
                a.push(b + "=" + c[b]);
            }
            return a;
        },
        getSWFHTML: function() {
            var a = "";
            if (navigator.plugins && navigator.mimeTypes && navigator.mimeTypes.length) {
                if (this.getAttribute("doExpressInstall")) {
                    this.addVariable("MMplayerType", "PlugIn");
                }
                a = '<embed type="application/x-shockwave-flash" src="' + this.getAttribute("swf") + '" width="' + this.getAttribute("width") + '" height="' + this.getAttribute("height") + '"';
                a += ' id="' + this.getAttribute("id") + '" name="' + this.getAttribute("id") + '" ';
                var b = this.getParams();
                for (var c in b) {
                    a += [ c ] + '="' + b[c] + '" ';
                }
                var d = this.getVariablePairs().join("&");
                if (d.length > 0) {
                    a += 'flashvars="' + d + '"';
                }
                a += "/>";
            } else {
                if (this.getAttribute("doExpressInstall")) {
                    this.addVariable("MMplayerType", "ActiveX");
                }
                a = '<object id="' + this.getAttribute("id") + '" classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" width="' + this.getAttribute("width") + '" height="' + this.getAttribute("height") + '">';
                a += '<param name="movie" value="' + this.getAttribute("swf") + '" />';
                var e = this.getParams();
                for (c in e) {
                    a += '<param name="' + c + '" value="' + e[c] + '" />';
                }
                var f = this.getVariablePairs().join("&");
                if (f.length > 0) {
                    a += '<param name="flashvars" value="' + f + '" />';
                }
                a += "</object>";
            }
            return a;
        },
        write: function(a) {
            if (this.getAttribute("useExpressInstall")) {
                var c = new G.PlayerVersion([ 6, 0, 65 ]);
                if (this.installedVer.versionIsValid(c) && !this.installedVer.versionIsValid(this.getAttribute("version"))) {
                    this.setAttribute("doExpressInstall", true);
                    this.addVariable("MMredirectURL", escape(this.getAttribute("xiRedirectUrl")));
                    b.title = b.title.slice(0, 47) + " - Flash Player Installation";
                    this.addVariable("MMdoctitle", b.title);
                }
            }
            if (this.skipDetect || this.getAttribute("doExpressInstall") || this.installedVer.versionIsValid(this.getAttribute("version"))) {
                var d = typeof a == "string" ? b.getElementById(a) : a;
                d.innerHTML = this.getSWFHTML();
                return true;
            } else {
                if (this.getAttribute("redirectUrl") != "") {
                    b.location.replace(this.getAttribute("redirectUrl"));
                }
            }
            return false;
        }
    };
    G.SWFObjectUtil.getPlayerVersion = function(a, b) {
        var c = new G.PlayerVersion([ 0, 0, 0 ]);
        if (navigator.plugins && navigator.mimeTypes.length) {
            var d = navigator.plugins["Shockwave Flash"];
            if (d && d.description) {
                c = new G.PlayerVersion(d.description.replace(/([a-z]|[A-Z]|\s)+/, "").replace(/(\s+r|\s+b[0-9]+)/, ".").split("."));
            }
        } else {
            try {
                var e = new ActiveXObject("ShockwaveFlash.ShockwaveFlash");
                for (var f = 3; e != null; f++) {
                    e = new ActiveXObject("ShockwaveFlash.ShockwaveFlash." + f);
                    c = new G.PlayerVersion([ f, 0, 0 ]);
                }
            } catch (g) {}
            if (a && c.major > a.major) {
                return c;
            }
            if (!a || (a.minor != 0 || a.rev != 0) && c.major == a.major || c.major != 6 || b) {
                try {
                    c = new G.PlayerVersion(e.GetVariable("$version").split(" ")[1].split(","));
                } catch (g) {}
            }
        }
        return c;
    };
    G.PlayerVersion = function(a) {
        this.major = parseInt(a[0]) != null ? parseInt(a[0]) : 0;
        this.minor = parseInt(a[1]) || 0;
        this.rev = parseInt(a[2]) || 0;
    };
    G.PlayerVersion.prototype.versionIsValid = function(a) {
        if (this.major < a.major) {
            return false;
        }
        if (this.major > a.major) {
            return true;
        }
        if (this.minor < a.minor) {
            return false;
        }
        if (this.minor > a.minor) {
            return true;
        }
        return this.rev >= a.rev;
    };
    G.util = {
        getRequestParameter: function(a) {
            var c = b.location.search || b.location.hash;
            if (c) {
                var d = c.indexOf(a + "=");
                var e = c.indexOf("&", d) > -1 ? c.indexOf("&", d) : c.length;
                if (c.length > 1 && d > -1) {
                    return c.substring(c.indexOf("=", d) + 1, e);
                }
            }
            return "";
        }
    };
    a.baSWFObject = G.baSWFObject;
    var H = c.parseJSON = JSON.parse;
    var I = function(b) {
        var c = {
            baseUrl: "",
            xhrTimeout: 5e3
        };
        for (var d = 0; d < b.length; d++) {
            var i = b[d];
            if (e(i)) {
                c.ondone = i;
            } else if (f(i)) {
                c = p(c, i);
            } else if (g(i)) {
                c["adspaces"] = i;
            } else if (h(i)) {
                c["baseUrl"] = i;
            }
        }
        if (!g(c["adspaces"])) {
            var j = a["ba_adspaces"];
            if (!j || j.length === 0 || j.loaded) {
                q.error("adspaces empty");
                return false;
            } else {
                j.loaded = true;
                c["adspaces"] = j;
            }
        }
        var k = c.contexts = {};
        var l = c.adspaces;
        for (d = 0; d < l.length; d++) {
            var m = l[d];
            if (m.id > 0) {
                var n = m.context || "_GLOBAL_";
                m.context = k[n] = k[n] || {
                    name: n,
                    ids: [],
                    adspaces: {},
                    keyword: m.keyword || "",
                    searchword: m.searchword || "",
                    adServingLoad: ""
                };
                k[n].ids.push(m.id);
                k[n].adspaces[m.id] = m;
            } else {
                q.error("no id", m);
            }
        }
        return c;
    };
    var J = c.load = function() {
        var a = I(arguments);
        for (var c in a.contexts) {
            var d = a.contexts[c];
            var e = a.baseUrl + "/api/v1/get/campaigns.json?adspaces=" + d.ids.join(",") + "&adServingLoad=" + o(d.adServingLoad) + "&keyword=" + o(d.keyword) + "&searchword=" + o(d.searchword);
            s(e, function(c) {
                return function(d, e) {
                    q.log(e, c);
                    if (d) {
                        q.log("error", d);
                    } else {
                        var f = e.campaigns;
                        for (var g = 0; g < f.length; g++) {
                            var h = f[g];
                            var i = c.adspaces[h.adspace];
                            i.campaign = h;
                            q.log(h);
                            var j = b.getElementById(i.target);
                            j.innerHTML = "";
                            if (h.campaign && h.banner && h.adspace) {
                                var k = "script_" + i.target + "_" + i.id;
                                var l = b.getElementById(k);
                                if (!l) {
                                    l = b.createElement("script");
                                    l.id = k;
                                    l.type = "text/javascript";
                                    l.async = false;
                                    l.onload = l.onreadystatechange = function(a, b) {
                                        return function() {};
                                    }(h, c);
                                    l.src = a.baseUrl + "/api/v1/get/js_banner" + "?adspaceid=" + o(i.id) + "&campaignid=" + o(h.campaign) + "&bannerid=" + o(h.banner) + "&appendTo=" + o(i.target);
                                    j.parentNode.insertBefore(l, j);
                                } else {
                                    q.error("already loaded " + k);
                                }
                            }
                        }
                    }
                };
            }(d));
        }
        F(function() {});
        return a;
    };
    return c;
});