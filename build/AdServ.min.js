/*! AdServ  0.0.8 2013-05-30 08:56:41 */
"use strict";

(function(a, b) {
    a.AdServ = b(a, a.document);
})(window, function(a, b) {
    var c = a.AdServ || {};
    c.version = "0.0.8";
    c.released = "2013-05-30 08:56:41";
    a.AdServ = c;
    c.adspaces = c.adspaces || a.ba_adspaces || [];
    a.adServingLoad = a.adServingLoad || "";
    var d = function(a) {
        return a && typeof a === "function";
    };
    var e = function(a) {
        return a && typeof a === "object";
    };
    var f = function(a) {
        return a && a.toString() === "[object Array]";
    };
    var g = function(a) {
        return a && typeof a === "string";
    };
    var h = function(a) {
        return a && typeof a === "undefined";
    };
    var i = function(a) {
        return a ? a.nodeType === 1 : false;
    };
    var j = function(a) {
        return a ? a.nodeType === 9 : false;
    };
    var k = function() {};
    var l = function(a) {
        if (i(a)) {
            return a;
        }
        var c = a.charAt(0);
        return c === "#" ? b.getElementById(a.substr(1)) : null;
    };
    c.$ = l;
    var m;
    if (!a.getComputedStyle) {
        m = function(a, b) {
            this.el = l(a);
            this.getPropertyValue = function(b) {
                var c = /(\-([a-z]){1})/g;
                if (b == "float") {
                    b = "styleFloat";
                }
                if (c.test(b)) {
                    b = b.replace(c, function() {
                        return arguments[2].toUpperCase();
                    });
                }
                return a.currentStyle[b] ? a.currentStyle[b] : null;
            };
            return this;
        };
    } else {
        m = a.getComputedStyle;
    }
    var n = function(a, b) {
        a = l(a);
        return m(l(a)).getPropertyValue(b);
    };
    c.css = n;
    var o = function(a) {
        a = l(a);
        if (!a) {
            return false;
        }
        if (a.nodeName === "BODY") {
            return true;
        }
        if (n(a, "visibility") == "hidden") {
            return false;
        }
        if (n(a, "display") == "none") {
            return false;
        }
        if (n(a, "opacity") == "0") {
            return false;
        }
        return o(a.parentNode);
    };
    c.isVisible = o;
    var p = {};
    var q = function(b, c, d) {
        p[b] = p[b] === undefined ? [] : p[b];
        p[b].push(function(b) {
            return c.apply(d || a, b);
        });
    };
    c.on = q;
    var r = function(a) {
        if (p[a] !== undefined) {
            var b = Array.prototype.slice.call(arguments, 1);
            for (var c = 0; c < p[a].length; c++) {
                p[a][c](b);
            }
        }
    };
    c.emit = r;
    var s = a.onresize || k;
    a.onresize = function() {
        r("resize");
        s();
    };
    var t = function(a) {
        return new Function("return (" + a + ")")();
    };
    c.parseJSON = typeof JSON === "object" ? JSON.parse : function(a) {
        a += "";
        if (a != "") {
            var b = a.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, "@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, "]").replace(/(?:^|:|,)(?:\s*\[)+/g, "");
            if (/^[\],:{}\s]*$/.test(b)) {
                return t(a);
            }
        }
        throw "parseJSON failed";
    };
    return c;
});