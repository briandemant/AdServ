/*!
	 * ## AdServing js library:
	 * Version  : **2.1.2**  
	 * Released : **Fri Jun 13 2014 07:41:53 GMT+0200 (CEST)** 
	 * @author Brian Demant <brian.demantgmail.com> (2013)
	 */
!function(e, t) {
    e.AdServ = t(e, e.document);
}(window, function(window, document) {
    function safe_log(e) {
        return function(t) {
            try {
                AdServ.log_messages.push(e + ":" + JSON.stringify(t));
            } catch (n) {
                AdServ.log_messages.push(e + ":" + t);
            }
        };
    }
    function noop() {}
    function randhex(e) {
        return (4294967296 * (1 + Math.random())).toString(16).substr(1, e);
    }
    function count() {
        return guid.count.toString(16).substr(1, 4);
    }
    function guid() {
        guid.count++, guid.date || (guid.date = ((Date.now() - 11281176e5) / 1e3 | 0).toString(16), 
        guid.count = 65537, setTimeout(function() {
            guid.date = !1;
        }, 1e3));
        var e = toArray(arguments);
        return e.push(guid.date), e.push(count()), e.push(randhex(8)), e.join("_");
    }
    function toArray(e) {
        return slice.call(e, 0);
    }
    function isFunction(e) {
        return e && "function" == typeof e;
    }
    function isObject(e) {
        return e && "object" == typeof e && "[object Object]" === toString.call(e);
    }
    function isArray(e) {
        return e && "object" == typeof e && "[object Array]" === toString.call(e);
    }
    function isString(e) {
        return e && "string" == typeof e;
    }
    function isUndefined(e) {
        return e && void 0 === e;
    }
    function isElement(e) {
        return e ? 1 === e.nodeType : !1;
    }
    function isNode(e) {
        return e ? 9 === e.nodeType : !1;
    }
    function throttle(e, t) {
        var n = !1;
        return function() {
            n || (n = !0, e(), setTimeout(function() {
                e(), n = !1;
            }, t));
        };
    }
    function len(e) {
        return e.length;
    }
    function mix(e, t) {
        var n, r = {};
        for (n in e) e.hasOwnProperty(n) && (r[n] = e[n]);
        for (n in t) t.hasOwnProperty(n) && (r[n] = t[n]);
        return r;
    }
    function getRequestParameter(e) {
        var t = location.search + "&" + location.hash;
        if (len(t) > 1) {
            var n = t.indexOf(e + "=");
            if (n > -1) {
                var r = t.indexOf("&", n) > -1 ? t.indexOf("&", n) : len(t);
                return t.substring(t.indexOf("=", n) + 1, r);
            }
        }
    }
    function isSupportedBrowser() {
        return ("addEventListener" in window || "attachEvent" in window) && "querySelector" in document && "querySelectorAll" in document && "JSON" in window && "stringify" in JSON && "parse" in JSON && "postMessage" in window;
    }
    function get(e, t) {
        function n() {
            clearTimeout(r);
        }
        t = t || noop;
        var r, a;
        if (window.XDomainRequest) a = new XDomainRequest(), a.onprogress = function() {}; else if (window.XMLHttpRequest) a = new XMLHttpRequest(); else try {
            a = new activeX("Msxml2.XMLHTTP");
        } catch (o) {
            return null;
        }
        return r = setTimeout(function() {
            a.abort(), t("aborted by a timeout", null, a);
        }, 5e3), a.onreadystatechange = function() {
            4 == a.readyState && (a.onload = noop, n(), t(200 != a.status ? "err : " + a.status : null, a.responseText, a));
        }, a.onload = function() {
            n(), a.status ? t(200 != a.status ? "err : " + a.status : null, a.responseText, a) : t(a.responseText ? null : "err : no response", a.responseText, a);
        }, a.open("GET", e, !0), a.send(), a;
    }
    function getJSON(e, t) {
        return get(e, function(e, n, r) {
            var a = n;
            if (!e) try {
                a = parseJSON(n);
            } catch (o) {
                return t("malformed json : " + o.message);
            }
            t(e, a, r);
        });
    }
    function loadScript(e, t) {
        t = t || noop;
        var n = document.createElement("script"), r = document.head || document.body;
        n.src = (e.indexOf("?") > 0 ? e + "&" : e + "?") + "rnd=" + Math.random(), n.onload = n.onreadystatechange = function() {
            n[readyState] && "loaded" != n[readyState] && "complete" != n[readyState] || (t(), 
            r.removeChild(n), n.onload = n.onreadystatechange = noop);
        }, r.appendChild(n);
    }
    function getPlayerVersion() {
        if (activeX) try {
            var e = new activeX("ShockwaveFlash.ShockwaveFlash");
            if (e) {
                var t = e.GetVariable("$version").substring(4);
                return parseFloat(t.replace(",", "."));
            }
        } catch (n) {} else {
            var r = window.navigator.plugins["Shockwave Flash"];
            if (r && r.description) return parseFloat(r.description.match(/(\d+)\.(\d+)/)[0]);
        }
        return "0";
    }
    function passbackHandlerMaker(e, t) {
        guid("handler", t.adspace);
        return function() {
            return function(n) {
                var r, a;
                try {
                    r = parseJSON(n.data);
                } catch (o) {
                    a = o;
                }
                a || r.adspace != t.adspace || (console.warn("passback from adspace " + t.adspace + " to " + r.next), 
                console.log("campaign rejected:", t), e.innerHTML = "", t.nesting = (0 | t.nesting) + 1, 
                t.nesting < 10 ? AdServ.load({
                    adspaces: [ {
                        id: r.next,
                        target: e,
                        adServingLoad: t.ctx.adServingLoad
                    } ]
                }) : console.error("too deep"));
            };
        };
    }
    function makeA(e, t) {
        var n = document.createElement("a");
        return n.id = guid("a", t.adspace, t.campaign), n.setAttribute("href", t.click), 
        n.setAttribute("target", "_blank"), n.appendChild(e), n;
    }
    function makeImg(e) {
        var t = document.createElement("img");
        return t.id = guid("img", e.adspace, e.campaign), t.border = 0, t.src = e.image, 
        t;
    }
    function createIframe(e) {
        var t = document.createElement("iframe");
        return t.id = guid("iframe", e.adspace, e.campaign), t.style.width = e.width + "px", 
        t.style.height = e.height + "px", t.style.border = 0, t.style.borderStyle = "none", 
        t.frameBorder = 0, t.scrolling = "no", t;
    }
    function wrapIframe(e, t) {
        var n = createIframe(t);
        return e.appendChild(n), n.contentDocument.write('<!doctype html><body style="margin:0px;padding:0px;width:100%;height:100%;"></body>'), 
        AdServ.bind(window, "message", passbackHandlerMaker(e, t)(n)), n;
    }
    function makeFloat(e) {
        console.log(e);
        var t = guid("float");
        console.log("got a floating banner!", t);
        var n = "position:fixed; width:" + e.width + "px; height:" + e.height + "px; z-index:2147483646;";
        if ("centre" == e.floating_position) n += "left:50%; top:50%;margin-left:-" + e.width / 2 + "px;margin-top:-" + (e.height + 16) / 2 + "px;"; else if ("top_centre" == e.floating_position) n += "left:50%; top:0;margin-left:-" + e.width / 2 + "px;"; else if ("top_left" == e.floating_position) n += "left:0; top:0;"; else if ("top_right" == e.floating_position) n += "right:0; top:0;"; else if ("bottom_left" == e.floating_position) n += "left:0; bottom:0;"; else if ("bottom_right" == e.floating_position) n += "right:0; bottom:0;"; else if ("bottom_centre" == e.floating_position) n += "left:50%; bottom:0;margin-left:-" + e.width / 2 + "px;margin-top:-" + e.height / 2 + "px;;position:fixed !important;"; else if (e.floating_position.indexOf(".") > 0) {
            var r = e.floating_position.split(".");
            n += "left:" + r[0] + "; top:" + r[1] + ";";
        }
        var a = document.createElement("div");
        a.id = "floating_" + t, a.close = function() {
            clearTimeout(a.timeout), a.style.display = "none", a.close = noop;
        }, a.timeout = setTimeout(a.close, 1e3 * e.floating_time);
        var o = document.createElement("div");
        if (o.id = "content_" + t, 0 != e.floating_close_position.indexOf("off")) {
            var i = document.createElement("div");
            bind(i, "click", a.close), i.id = "close_" + t;
            var s = "position:absolute; width:16px; height:16px;z-index:2147483646;border:0px; cursor:pointer;";
            n += "background:#fff;", "top_left" == e.floating_close_position ? s += "left:0; top:0;" : "top_right" == e.floating_close_position ? s += "right:0; top:0;" : "bottom_left" == e.floating_close_position ? s += "left:0; bottom:0;" : "bottom_right" == e.floating_close_position && (s += "right:0; bottom:0;"), 
            i.setAttribute("style", s);
            var d = document.createElement("img");
            d.src = AdServ.baseUrl + "/close.gif", i.appendChild(d), a.appendChild(i);
        }
        return a.appendChild(o), a.setAttribute("style", n), a.setAttribute("class", "adserving_float adserving_float_" + e.adspace), 
        document.body.appendChild(a), e.elem = o;
    }
    function render(e) {
        var t, n;
        if (e.elem) {
            if (n = e.elem, e.floating && (n = makeFloat(e)), e.iframe && "iframe" !== e.banner_type && "wallpaper" !== e.banner_type) {
                if ("html" === e.banner_type) return t = createIframe(e), t.src = AdServ.baseUrl + "/show_campaign.php?nocount=1&adspaceid=" + e.adspace + "&campaignid=" + e.campaign + "&bannerid=" + e.banner, 
                AdServ.bind(window, "message", passbackHandlerMaker(n, e)(t)), void n.appendChild(t);
                t = wrapIframe(n, e), n = t.contentDocument.body;
            }
            var r = engines[e.banner_type];
            r ? (r(n, e), emit("adspace_loaded", e)) : console.error("no renderer for banner type yet : " + e.banner_type, e);
        } else console.error("no element for banner yet : " + e.banner_type, e);
    }
    function getContext(e, t) {
        var n = e.context || "_GLOBAL_";
        e.context = t[n] = t[n] || {
            name: n,
            ids: [],
            adspaces: {},
            keyword: e.keyword || AdServ.keyword,
            searchword: e.searchword || AdServ.searchword,
            adServingLoad: ""
        }, e.adServingLoad && (e.context.adServingLoad += e.adServingLoad), AdServ.keyword || (AdServ.keyword = e.keyword);
    }
    function set(e, t, n) {
        AdServ[e] = isObject(n[0]) && n[0][e] || AdServ[e] || t;
    }
    var AdServ = window.AdServ || {};
    AdServ.version = "2.1.2", AdServ.released = "Fri Jun 13 2014 07:41:53 GMT+0200 (CEST)", 
    window.AdServ = AdServ, !1 = !0;
    var domContentLoaded = "DOMContentLoaded", addEventListener = "addEventListener", onreadystatechange = "onreadystatechange", readyState = "readyState";
    if (AdServ.log_messages = [], void 0 !== window.console) var console = window.console; else console = {};
    console.log = console.log || safe_log("log"), console.debug = console.debug || safe_log("debug"), 
    console.error = console.error || safe_log("error"), console.warn = console.warn || safe_log("warn"), 
    window.adServingLoad = window.adServingLoad || "", Date.now || (Date.now = function() {
        return +new Date();
    });
    var ie, toString = Object.prototype.toString, slice = Array.prototype.slice, urlencode = encodeURIComponent, activeX = window.ActiveXObject;
    AdServ.guid = guid, AdServ.isSupportedBrowser = isSupportedBrowser;
    var ready = AdServ.ready = function(e) {
        function t(e) {
            for (s = 1; e = r.shift(); ) e();
        }
        var n, r = [], a = !1, o = document.documentElement, i = o.doScroll, s = /^loade|c/.test(document[readyState]);
        return document[addEventListener] && document[addEventListener](domContentLoaded, n = function() {
            document.removeEventListener(domContentLoaded, n, a), t();
        }, a), i && document.attachEvent(onreadystatechange, n = function() {
            /^c/.test(document[readyState]) && (document.detachEvent(onreadystatechange, n), 
            t());
        }), e = i ? function(t) {
            self != top ? s ? t() : r.push(t) : function() {
                try {
                    o.doScroll("left");
                } catch (n) {
                    return setTimeout(function() {
                        e(t);
                    }, 50);
                }
                t();
            }();
        } : function(e) {
            s ? e() : r.push(e);
        };
    }(), $ID = AdServ.$ID = function(e) {
        return isElement(e) ? e : document.getElementById(e);
    }, $ = AdServ.$ = function(e, t) {
        return isElement(e) ? e : (t || (t = document), t.querySelector(e));
    }, $$ = AdServ.$$ = function(e, t) {
        return t || (t = document), slice.call(t.querySelectorAll(e));
    }, getComputedStyle;
    getComputedStyle = window.getComputedStyle ? window.getComputedStyle : function(e) {
        var t = {};
        return t.el = e, t.getPropertyValue = function(e) {
            var n = /(\-([a-z]){1})/g;
            return "float" == e && (e = "styleFloat"), n.test(e) && (e = e.replace(n, function() {
                return arguments[2].toUpperCase();
            })), t.el.currentStyle[e] ? t.el.currentStyle[e] : null;
        }, t;
    };
    var css = AdServ.css = function(e, t) {
        var n = $ID(e);
        return n ? getComputedStyle($(n)).getPropertyValue(t) : null;
    }, isVisible = AdServ.isVisible = function(e) {
        var t = $ID(e);
        return t ? "BODY" === t.nodeName ? !0 : "hidden" == css(t, "visibility") ? !1 : "none" == css(t, "display") ? !1 : "0" == css(t, "opacity") ? !1 : isVisible(t.parentNode) : !1;
    }, evil = function(e) {
        return Function("return (" + e + ")")();
    }, parseJSON = "object" == typeof JSON ? JSON.parse : function(e) {
        if (e += "", "" != e) {
            var t = e.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, "@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, "]").replace(/(?:^|:|,)(?:\s*\[)+/g, "");
            if (/^[\],:{}\s]*$/.test(t)) return evil(e);
        }
        throw "parseJSON failed";
    }, eventHandlers = {}, on = AdServ.on = function(e, t, n) {
        e && t && (eventHandlers[e] = void 0 === eventHandlers[e] ? [] : eventHandlers[e], 
        eventHandlers[e].push(function(e) {
            return t.apply(n || window, e);
        }));
    }, once = AdServ.once = function(e, t, n) {
        on(e, function() {
            t(), t = noop;
        }, n);
    }, emit = AdServ.emit = function(e) {
        if (void 0 !== eventHandlers[e]) for (var t = slice.call(arguments, 1), n = 0; n < len(eventHandlers[e]); n++) eventHandlers[e][n](t);
    }, bind = AdServ.bind = function(e, t, n) {
        e[addEventListener] ? e[addEventListener](t, n, !1) : e.attachEvent("on" + t, n);
    }, unbind = AdServ.unbind = function(e, t, n) {
        e[addEventListener] ? e.removeEventListener(t, n, !1) : e.detachEvent(t, n);
    }, originalResize = window.onresize || noop;
    window.onresize = function() {
        try {
            originalResize();
        } catch (e) {}
        emit("resize");
    }, ready(function() {
        emit("load");
    }), AdServ.get = get, AdServ.getJSON = getJSON, AdServ.loadScript = loadScript;
    var playerVersion;
    playerVersion = getPlayerVersion();
    var isFlashSupported = AdServ.flash = playerVersion >= 6 ? playerVersion : !1, Flash = function(e, t, n, r) {
        this.params = {
            quality: "best",
            allowscriptaccess: "always",
            wmode: "opaque"
        }, this.vars = {}, this.attrs = {
            swf: e,
            id: t,
            w: n,
            h: r
        };
    };
    Flash.prototype = {
        addParam: function(e, t) {
            this.params[e] = t;
        },
        addVariable: function(e, t) {
            this.vars[e] = t;
        },
        getVars: function() {
            var e, t = [];
            for (e in this.vars) t.push(e + "=" + this.vars[e]);
            return t;
        },
        getSWFHTML: function() {
            var e, t = this.params, n = this.attrs, r = this.getVars().join("&"), a = ' width="' + n.w + '" height="' + n.h + '" id="' + n.id + '" name="' + n.id + '" ';
            if (activeX) {
                e = '<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"' + a + '><param name="movie" value="' + n.swf + '" />';
                for (o in t) e += '<param name="' + o + '" value="' + t[o] + '" />';
                len(r) > 0 && (e += '<param name="flashvars" value="' + r + '" />'), e += "</object>";
            } else {
                e = '<embed type="application/x-shockwave-flash" src="' + n.swf + '"' + a;
                for (var o in t) e += o + '="' + t[o] + '" ';
                len(r) > 0 && (e += ' flashvars="' + r + '"'), e += ">";
            }
            return e;
        },
        write: function(e) {
            if (isFlashSupported) {
                var t = $ID(e);
                if (t) return t.innerHTML = this.getSWFHTML(), !0;
            }
            return !1;
        }
    }, window.baSWFObject = Flash;
    var engines = {};
    engines.image = function(e, t) {
        var n = makeImg(t), r = makeA(n, t);
        e.appendChild(r);
    }, engines.iframe = function(e, t) {
        var n = document.createElement("iframe");
        n.id = guid("iframe", t.adspace, t.campaign), n.style.width = t.width + "px", n.style.height = t.height + "px", 
        n.style.border = 0, n.style.borderStyle = "none", n.frameBorder = 0, n.scrolling = "no", 
        AdServ.bind(window, "message", passbackHandlerMaker(e, t)(n)), n.src = t.iframe_src, 
        e.appendChild(n);
    }, engines.flash = function(e, t) {
        var n = t.flash + "?" + t.click_tag_type + "=" + urlencode(t.click);
        console.log(n, t);
        var r = new Flash(n, guid("flash", t.adspace, t.campaign), t.width, t.height);
        if (!r.write(e)) {
            var a = makeImg(t), o = makeA(a, t);
            e.appendChild(o);
        }
    }, engines.txt = function(e, t) {
        var n = document.createTextNode(t.txt), r = makeA(n, t);
        e.appendChild(r);
    }, engines.wallpaper = function(e, t) {
        function n(n) {
            n || (n = window.event);
            var r = window.event ? n.srcElement : n.target;
            r == e && window.open(t.click);
        }
        e.style.backgroundImage = "url(" + t.wallpaper + ")", e.style.backgroundRepeat = t.wallpaper_repeat || "no-repeat", 
        e.onclick = n;
        var r = document.body.getAttribute("class");
        document.body.setAttribute("class", (r || "") + " adserving_wallpaper_loaded"), 
        emit("wallpaper_loaded", t);
    }, engines.html = function renderHtml(elem, campaign) {
        function safeScriptContent(e) {
            return e.replace("document.write(", 'console.warn("WARNING : banner: ' + campaign.banner + ' uses document.write");document.write(');
        }
        var script, original;
        elem.innerHTML = campaign.html;
        var scripts = elem.getElementsByTagName("script"), iframes = elem.getElementsByTagName("iframe");
        1 == iframes.length && AdServ.bind(window, "message", passbackHandlerMaker(elem, campaign)(iframes[0]));
        for (var original, length = scripts.length, uid = guid("js", campaign.adspace, campaign.campaign), i = 0; length > i; i++) original = scripts[i], 
        console.log("original", original), original.src && (console.log("original.src"), 
        script = document.createElement("script"), script.id = uid + "_" + i, script.src = original.src, 
        elem.appendChild(script)), original.innerText ? (console.log("original.txt"), script = document.createElement("script"), 
        script.id = uid + "_" + i, script.innerText = safeScriptContent(original.innerText), 
        elem.appendChild(script)) : original.innerHTML && (console.log("original.html", original), 
        setTimeout(function(src) {
            return function() {
                console.log("eval", src), eval(safeScriptContent(src));
            };
        }(original.innerHTML), 1e3));
    }, AdServ.render = render;
    var prepareContexts = function(e) {
        set("baseUrl", "", e), set("keyword", "", e), set("searchword", "", e);
        for (var t = {
            baseUrl: AdServ.baseUrl,
            xhrTimeout: 5e3,
            guid: guid("ad")
        }, n = 0; n < len(e); n++) {
            var r = e[n];
            isFunction(r) ? t.ondone = r : isObject(r) ? t = mix(t, r) : isArray(r) && (t.adspaces = r);
        }
        if (!isArray(t.adspaces)) {
            var a = window.ba_adspaces;
            !a || 0 === len(a) || a.added ? t.adspaces = [] : (a.added = !0, t.adspaces = a);
        }
        if (!t.wallpaper) {
            var a = window.ba_wallpaper;
            !a || 0 === len(a) || a.added || (a.added = !0, t.wallpaper = a);
        }
        if (!t.floating) {
            var a = window.ba_floating;
            !a || 0 === len(a) || a.added || (a.added = !0, t.floating = [ a ]);
        }
        var o = t.contexts = {}, i = t.adspaces;
        for (n = 0; n < len(i); n++) {
            var s = i[n];
            s.id > 0 && (getContext(s, o), s.context.ids.push(s.id), s.context.adspaces[s.id] = s);
        }
        if (t.floating) for (i = t.floating, n = 0; n < len(i); n++) {
            var s = i[n];
            s.id > 0 && (getContext(s, o), s.context.floating = s, s.context.adspaces[s.id] = s);
        }
        if (t.wallpaper) {
            var s = t.wallpaper;
            s.id > 0 && (getContext(s, o), s.context.wallpaper = s, s.context.adspaces[s.id] = s);
        }
        return 0 != t.adspaces.length || t.wallpaper || t.floating || console.error("no adspaces or wallpaper provided"), 
        t;
    }, showCampaign = function(e) {
        render(e);
    }, checkVisibility = throttle(function() {
        for (var e = [], t = 0; t < len(invisibleAdspaces); t++) {
            var n = invisibleAdspaces[t];
            isVisible(n.elem) ? (recheck && clearInterval(recheck), showCampaign(n)) : e.push(n);
        }
        invisibleAdspaces = e;
    }, 200);
    AdServ.on("resize", function() {
        recheck && clearInterval(recheck), checkVisibility();
    });
    var recheck = 0, invisibleAdspaces = [];
    return AdServ.loadAdspaces = AdServ.load = function() {
        var e = prepareContexts(arguments), t = 0;
        for (var n in e.contexts) t++;
        for (var r in e.contexts) {
            var a = e.contexts[r], o = e.baseUrl + "/api/v2/get/campaigns.json?" + (a.wallpaper ? "&wallpaper=" + a.wallpaper.id : "") + (a.floating ? "&floating=" + a.floating.id : "") + "&adspaces=" + a.ids.join(",") + "&adServingLoad=" + urlencode(a.adServingLoad) + "&keyword=" + urlencode(a.keyword) + "&sw=" + urlencode(a.searchword) + "&uid=" + e.guid + "&count";
            getJSON(o, function(n) {
                return n.conf = e, function(e, r) {
                    if (e) ; else {
                        var a = r.campaigns;
                        n.adServingLoad = r.meta.adServingLoad;
                        for (var o = 0; o < len(a); o++) {
                            var i = a[o];
                            i.ctx = n, i.target = n.adspaces[i.adspace].target || n.adspaces[i.adspace].wallpaperTarget || document.body, 
                            i.type = (i.wallpaper ? "wallpaper:" : "") + (i.floating ? "floating:" : "") + i.banner_type, 
                            i.elem = $ID(i.target), i.elem ? (console.log(i.elem), $ID(n.adspaces[i.adspace].target) && (i.elem.innerHTML = "<!-- Adspace " + i.adspace + " here -->"), 
                            console.log("adspace:" + i.adspace), i.campaign && i.banner && i.adspace ? (console.log("group:" + i.group), 
                            i.target !== document.body && console.log(i.banner_type, i.elem), invisibleAdspaces.push(i)) : console.warn("Adspace was empty: " + i.adspace, i)) : console.error("target for adspace not found : " + i.target, i);
                        }
                    }
                    --t, t || ready(function() {
                        checkVisibility();
                    });
                };
            }(a));
        }
        return e;
    }, console.debug("AdServ.released : " + AdServ.released), AdServ;
});